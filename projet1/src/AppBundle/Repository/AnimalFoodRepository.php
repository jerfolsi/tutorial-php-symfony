<?php

namespace AppBundle\Repository;

/**
 * AnimalFoodRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AnimalFoodRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllFromAnimal($animalId)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();

        $query = $qb->select("af")
            ->from("AppBundle:AnimalFood", "af")
            ->Where(
                $qb->expr()->eq("af.animal", ":animal_id")
            )
            ->setParameter("animal_id", $animalId);

        return $query->getQuery()->getResult();
    }

    public function getTotalNbUnityEaten($animalId)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();

        $query = $qb->select("SUM(af.nbEatenUnity) as totalFoodEaten")
            ->from("AppBundle:AnimalFood", "af")
            ->Where(
                $qb->expr()->eq("af.animal", ":animal_id")
            )
            ->setParameter("animal_id", $animalId);

        return $query->getQuery()->getResult();
    }

    public function getTotalCostFoodByAnimal($animalId)
    {
        /*
           SELECT sum(af.nbEatenUnity * f.unityPrice)
           FROM animal_food af
           INNER JOIN food f ON af.food_id = f.id
           WHERE af.animal_id = 1
         */
        
        //Call the EntityManage and then create a QueryBuilder()
        $qb = $this->getEntityManager()->createQueryBuilder();

        $query = $qb->select("SUM(af.nbEatenUnity * f.unityPrice) as totalCost")
            ->from("AppBundle:AnimalFood", "af")
            ->innerJoin("AppBundle:Food", "f", "WITH", "f.id = af.food")
            ->Where(
                $qb->expr()->eq("af.animal", ":animal_id")
            )
            ->setParameter("animal_id", $animalId);

        return $query->getQuery()->getResult();
    }

    public function getTotalCostFood($foodId)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();

        $query = $qb->select("SUM(af.nbEatenUnity * f.unityPrice) as totalCost")
            ->from("AppBundle:AnimalFood", "af")
            ->innerJoin("AppBundle:Food", "f", "WITH", "f.id = af.food")
            ->Where(
                $qb->expr()->eq("af.food", ":food_id")
            )
            ->setParameter("food_id", $foodId);

        return $query->getQuery()->getResult();
    }
}
